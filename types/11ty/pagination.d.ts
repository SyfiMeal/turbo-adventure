/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

declare global {

  /**
   * This is the pagination type generated by 11ty. The type information is inferred from 11ty's
   * documentation here, which is in no way exhaustive:
   *   https://www.11ty.dev/docs/pagination/
   */
  export interface EleventyPagination<T = EleventyCollectionItem> {

    /**
     * Array of current page's chunk of data
     */
    items: T[];

    /**
     * Current page number, 0 indexed
     */
    pageNumber: number;

    /**
     * Array of all page hrefs (in order)
     */
    hrefs: string[];

    /**
     * Relative hrefs to use as part of this pagination.
     */
    href: {
      /**
       * Put inside <a href="">Next Page</a>
       */
      next: string?;
      /**
       * Put inside <a href="">Previous Page</a>
       */
      previous: string?;
      first: string;
      last: string;
    };

    /**
     * The total number of items that were paginated (not just here).
     */
    size: number;

    /**
     * This indicates the original key of the data (from the data cascade).
     */
    data?: string;

    /**
     * Transforms source paginated data. This must return a new array; the old array is discarded
     * by 11ty.
     */
    before?: (sourceItems: any[]) => T[];

  }
}

// empty export to keep file a module
export {};
